function CompressImage(ob){this.files=ob.files;this.config={isAutoName:false,quality:1,limit_size:1 *1024 };this.callBack=ob.done;this.progress=ob.progress;this.outFiles=[];this.error=undefined;var me=this;this.start=function(){if(typeof this.callBack!=="function"){console.error("the callback function of done cannot be null or "+typeof(this.callBack)+"!");return}if(!window.FileReader){this.error="the brower cannot support window.FileReader!";this.callBack(this.outFiles,this.error);return}if(!document.createElement('canvas').getContext){this.error="the brower cannot support the canvas of html5!";this.callBack(this.outFiles,this.error);return}if(!this.files){this.error="the source image cannot be null!";this.callBack(this.outFiles,this.error);return}if(ob.outConfig){Object.assign(this.config,ob.outConfig)}for(var i=0;i<this.files.length;i+=1){this.config.type=this.files[i].type;this.fileToURL(this.files[i],this.files[i].name)}};this.dataURLtoFile=function(dataurl,filename){var arr=dataurl.split(','),mime=arr[0].match(/:(.*?);/)[1],bstr=atob(arr[1]),n=bstr.length,u8arr=new Uint8Array(n);while(n--){u8arr[n]=bstr.charCodeAt(n)}return new File([u8arr],filename,{type:mime})};this.canvasToFile=function(img,filename){var canvas=document.createElement('canvas');canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext('2d');ctx.drawImage(img,0,0,canvas.width,canvas.height);if(this.config.isAutoName){filename=Date.now().toString()}var result={};result=this.dataURLtoFile(canvas.toDataURL(this.config.type,0),filename);if(result.size<this.config.limit_size){result=this.dataURLtoFile(canvas.toDataURL(this.config.type,this.config.quality),filename);while(result.size>this.config.limit_size&&this.config.quality>0){this.config.quality=parseFloat((this.config.quality-0.05).toFixed(2));result=this.dataURLtoFile(canvas.toDataURL(this.config.type,this.config.quality),filename)}}this.outFiles.push(result);this.config.quality=1;if(typeof this.progress==='function'){this.progress(this.outFiles.length)}if(this.outFiles.length===this.files.length){this.callBack(this.outFiles)}};this.urlToImg=function(dataUrl,filename){var img=new Image();img.src=dataUrl;img.onload=function(){me.canvasToFile(img,filename)}};this.fileToURL=function(fileOb,filename){var reader=new FileReader();reader.readAsDataURL(fileOb);reader.onload=function(){;me.urlToImg(reader.result,filename)}}}